<?php

namespace App\GraphQl\Type\Definition\Output;

use ApiPlatform\Core\GraphQl\Type\Definition\TypeInterface;
use ApiPlatform\Core\GraphQl\Type\TypesContainerInterface;
use App\GraphQl\Type\Definition\Uuid;
use GraphQL\Type\Definition\InterfaceType;
use GraphQL\Type\Definition\ObjectType;
use GraphQL\Type\Definition\ResolveInfo;
use GraphQL\Type\Definition\Type;

final class CartType extends ObjectType implements TypeInterface
{
    private $typesContainer;

    public function __construct(array $config, TypesContainerInterface $typesContainer)
    {
        parent::__construct($config);
        $this->typesContainer = $typesContainer;
    }

    public function getFields(): array
    {
        $this->config['fields'] = [
            'id' => $this->typesContainer->get($this->name  . 'Id'),
            'items' => [
                'type' => Type::listOf($this->typesContainer->get($this->name . 'Item'))
            ]
        ];
        return parent::getFields(); // TODO: Change the autogenerated stub
    }

    public function getName(): string
    {
        return $this->name;
    }
}